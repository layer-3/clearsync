// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.23.4
// source: state_machine.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClearingSMState int32

const (
	ClearingSMState_CLEARING_SMSTATE_UNSPECIFIED                         ClearingSMState = 0
	ClearingSMState_CLEARING_SMSTATE_DEFAULT                             ClearingSMState = 1
	ClearingSMState_CLEARING_SMSTATE_INSTANTIATING                       ClearingSMState = 2
	ClearingSMState_CLEARING_SMSTATE_ACCEPTED                            ClearingSMState = 3
	ClearingSMState_CLEARING_SMSTATE_FAILED                              ClearingSMState = 4
	ClearingSMState_CLEARING_SMSTATE_INITIATOR_FUNDED                    ClearingSMState = 5
	ClearingSMState_CLEARING_SMSTATE_FUNDED                              ClearingSMState = 6
	ClearingSMState_CLEARING_SMSTATE_PRE_OP_CHALLENGING                  ClearingSMState = 7
	ClearingSMState_CLEARING_SMSTATE_PENDING_PRE_OP_CHALLENGE_REGISTERED ClearingSMState = 8
	ClearingSMState_CLEARING_SMSTATE_PRE_OP_CHALLENGE_REGISTERED         ClearingSMState = 9
	ClearingSMState_CLEARING_SMSTATE_OPERATIONAL                         ClearingSMState = 10
	ClearingSMState_CLEARING_SMSTATE_PROCESSING_MARGIN_CALL              ClearingSMState = 11
	ClearingSMState_CLEARING_SMSTATE_ACTIVE_SETTLEMENT                   ClearingSMState = 12
	ClearingSMState_CLEARING_SMSTATE_PROCESSING_POST_SETTLEMENT_MARGIN   ClearingSMState = 13
	ClearingSMState_CLEARING_SMSTATE_CHALLENGING                         ClearingSMState = 14
	ClearingSMState_CLEARING_SMSTATE_PENDING_CHALLENGE_REGISTERED        ClearingSMState = 15
	ClearingSMState_CLEARING_SMSTATE_CHALLENGE_REGISTERED                ClearingSMState = 16
	ClearingSMState_CLEARING_SMSTATE_FINALIZING                          ClearingSMState = 17
	ClearingSMState_CLEARING_SMSTATE_WITHDRAWING                         ClearingSMState = 18
	ClearingSMState_CLEARING_SMSTATE_CONCLUDING                          ClearingSMState = 19
	ClearingSMState_CLEARING_SMSTATE_FINAL                               ClearingSMState = 20
)

// Enum value maps for ClearingSMState.
var (
	ClearingSMState_name = map[int32]string{
		0:  "CLEARING_SMSTATE_UNSPECIFIED",
		1:  "CLEARING_SMSTATE_DEFAULT",
		2:  "CLEARING_SMSTATE_INSTANTIATING",
		3:  "CLEARING_SMSTATE_ACCEPTED",
		4:  "CLEARING_SMSTATE_FAILED",
		5:  "CLEARING_SMSTATE_INITIATOR_FUNDED",
		6:  "CLEARING_SMSTATE_FUNDED",
		7:  "CLEARING_SMSTATE_PRE_OP_CHALLENGING",
		8:  "CLEARING_SMSTATE_PENDING_PRE_OP_CHALLENGE_REGISTERED",
		9:  "CLEARING_SMSTATE_PRE_OP_CHALLENGE_REGISTERED",
		10: "CLEARING_SMSTATE_OPERATIONAL",
		11: "CLEARING_SMSTATE_PROCESSING_MARGIN_CALL",
		12: "CLEARING_SMSTATE_ACTIVE_SETTLEMENT",
		13: "CLEARING_SMSTATE_PROCESSING_POST_SETTLEMENT_MARGIN",
		14: "CLEARING_SMSTATE_CHALLENGING",
		15: "CLEARING_SMSTATE_PENDING_CHALLENGE_REGISTERED",
		16: "CLEARING_SMSTATE_CHALLENGE_REGISTERED",
		17: "CLEARING_SMSTATE_FINALIZING",
		18: "CLEARING_SMSTATE_WITHDRAWING",
		19: "CLEARING_SMSTATE_CONCLUDING",
		20: "CLEARING_SMSTATE_FINAL",
	}
	ClearingSMState_value = map[string]int32{
		"CLEARING_SMSTATE_UNSPECIFIED":                         0,
		"CLEARING_SMSTATE_DEFAULT":                             1,
		"CLEARING_SMSTATE_INSTANTIATING":                       2,
		"CLEARING_SMSTATE_ACCEPTED":                            3,
		"CLEARING_SMSTATE_FAILED":                              4,
		"CLEARING_SMSTATE_INITIATOR_FUNDED":                    5,
		"CLEARING_SMSTATE_FUNDED":                              6,
		"CLEARING_SMSTATE_PRE_OP_CHALLENGING":                  7,
		"CLEARING_SMSTATE_PENDING_PRE_OP_CHALLENGE_REGISTERED": 8,
		"CLEARING_SMSTATE_PRE_OP_CHALLENGE_REGISTERED":         9,
		"CLEARING_SMSTATE_OPERATIONAL":                         10,
		"CLEARING_SMSTATE_PROCESSING_MARGIN_CALL":              11,
		"CLEARING_SMSTATE_ACTIVE_SETTLEMENT":                   12,
		"CLEARING_SMSTATE_PROCESSING_POST_SETTLEMENT_MARGIN":   13,
		"CLEARING_SMSTATE_CHALLENGING":                         14,
		"CLEARING_SMSTATE_PENDING_CHALLENGE_REGISTERED":        15,
		"CLEARING_SMSTATE_CHALLENGE_REGISTERED":                16,
		"CLEARING_SMSTATE_FINALIZING":                          17,
		"CLEARING_SMSTATE_WITHDRAWING":                         18,
		"CLEARING_SMSTATE_CONCLUDING":                          19,
		"CLEARING_SMSTATE_FINAL":                               20,
	}
)

func (x ClearingSMState) Enum() *ClearingSMState {
	p := new(ClearingSMState)
	*p = x
	return p
}

func (x ClearingSMState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClearingSMState) Descriptor() protoreflect.EnumDescriptor {
	return file_state_machine_proto_enumTypes[0].Descriptor()
}

func (ClearingSMState) Type() protoreflect.EnumType {
	return &file_state_machine_proto_enumTypes[0]
}

func (x ClearingSMState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClearingSMState.Descriptor instead.
func (ClearingSMState) EnumDescriptor() ([]byte, []int) {
	return file_state_machine_proto_rawDescGZIP(), []int{0}
}

var File_state_machine_proto protoreflect.FileDescriptor

var file_state_machine_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x2a, 0xb9, 0x06, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x53, 0x4d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4c, 0x45, 0x41,
	0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4c,
	0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44,
	0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4c, 0x45, 0x41,
	0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x4e, 0x54, 0x49, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19,
	0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x43,
	0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4c, 0x45, 0x41,
	0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x49,
	0x54, 0x49, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x06, 0x12, 0x27, 0x0a, 0x23,
	0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x50, 0x52, 0x45, 0x5f, 0x4f, 0x50, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47,
	0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x38, 0x0a, 0x34, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x4f, 0x50, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e,
	0x47, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x08, 0x12,
	0x30, 0x0a, 0x2c, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x4f, 0x50, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c,
	0x45, 0x4e, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10,
	0x09, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x41,
	0x4c, 0x10, 0x0a, 0x12, 0x2b, 0x0a, 0x27, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49,
	0x4e, 0x47, 0x5f, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x0b,
	0x12, 0x26, 0x0a, 0x22, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x54,
	0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x0c, 0x12, 0x36, 0x0a, 0x32, 0x43, 0x4c, 0x45, 0x41,
	0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x45, 0x54,
	0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x10, 0x0d,
	0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x49, 0x4e, 0x47,
	0x10, 0x0e, 0x12, 0x31, 0x0a, 0x2d, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43,
	0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45,
	0x52, 0x45, 0x44, 0x10, 0x0f, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45,
	0x4e, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x10,
	0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10,
	0x11, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4d,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x49, 0x4e,
	0x47, 0x10, 0x12, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x13, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x4d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x10, 0x14,
	0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2d, 0x33, 0x2f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x70, 0x6f, 0x72, 0x74,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_state_machine_proto_rawDescOnce sync.Once
	file_state_machine_proto_rawDescData = file_state_machine_proto_rawDesc
)

func file_state_machine_proto_rawDescGZIP() []byte {
	file_state_machine_proto_rawDescOnce.Do(func() {
		file_state_machine_proto_rawDescData = protoimpl.X.CompressGZIP(file_state_machine_proto_rawDescData)
	})
	return file_state_machine_proto_rawDescData
}

var file_state_machine_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_state_machine_proto_goTypes = []interface{}{
	(ClearingSMState)(0), // 0: state_machine.ClearingSMState
}
var file_state_machine_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_state_machine_proto_init() }
func file_state_machine_proto_init() {
	if File_state_machine_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_state_machine_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_state_machine_proto_goTypes,
		DependencyIndexes: file_state_machine_proto_depIdxs,
		EnumInfos:         file_state_machine_proto_enumTypes,
	}.Build()
	File_state_machine_proto = out.File
	file_state_machine_proto_rawDesc = nil
	file_state_machine_proto_goTypes = nil
	file_state_machine_proto_depIdxs = nil
}
