// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.23.4
// source: settlement.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SettlementType int32

const (
	SettlementType_SETTLEMENT_TYPE_UNSPECIFIED SettlementType = 0
	SettlementType_SETTLEMENT_TYPE_AVAILABLE   SettlementType = 1
	SettlementType_SETTLEMENT_TYPE_FORCE       SettlementType = 2
)

// Enum value maps for SettlementType.
var (
	SettlementType_name = map[int32]string{
		0: "SETTLEMENT_TYPE_UNSPECIFIED",
		1: "SETTLEMENT_TYPE_AVAILABLE",
		2: "SETTLEMENT_TYPE_FORCE",
	}
	SettlementType_value = map[string]int32{
		"SETTLEMENT_TYPE_UNSPECIFIED": 0,
		"SETTLEMENT_TYPE_AVAILABLE":   1,
		"SETTLEMENT_TYPE_FORCE":       2,
	}
)

func (x SettlementType) Enum() *SettlementType {
	p := new(SettlementType)
	*p = x
	return p
}

func (x SettlementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SettlementType) Descriptor() protoreflect.EnumDescriptor {
	return file_settlement_proto_enumTypes[0].Descriptor()
}

func (SettlementType) Type() protoreflect.EnumType {
	return &file_settlement_proto_enumTypes[0]
}

func (x SettlementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SettlementType.Descriptor instead.
func (SettlementType) EnumDescriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{0}
}

type SettlementState int32

const (
	SettlementState_SETTLEMENT_STATE_UNSPECIFIED SettlementState = 0
	SettlementState_SETTLEMENT_STATE_PROPOSED    SettlementState = 1
	SettlementState_SETTLEMENT_STATE_ACCEPTED    SettlementState = 2
	SettlementState_SETTLEMENT_STATE_INITIATED   SettlementState = 3
	SettlementState_SETTLEMENT_STATE_PREPARED    SettlementState = 4
	SettlementState_SETTLEMENT_STATE_EXECUTED    SettlementState = 5
	SettlementState_SETTLEMENT_STATE_COMPLETED   SettlementState = 6
	SettlementState_SETTLEMENT_STATE_WITHDRAWN   SettlementState = 7
	SettlementState_SETTLEMENT_STATE_FAILED      SettlementState = 8
	SettlementState_SETTLEMENT_STATE_REJECTED    SettlementState = 9
)

// Enum value maps for SettlementState.
var (
	SettlementState_name = map[int32]string{
		0: "SETTLEMENT_STATE_UNSPECIFIED",
		1: "SETTLEMENT_STATE_PROPOSED",
		2: "SETTLEMENT_STATE_ACCEPTED",
		3: "SETTLEMENT_STATE_INITIATED",
		4: "SETTLEMENT_STATE_PREPARED",
		5: "SETTLEMENT_STATE_EXECUTED",
		6: "SETTLEMENT_STATE_COMPLETED",
		7: "SETTLEMENT_STATE_WITHDRAWN",
		8: "SETTLEMENT_STATE_FAILED",
		9: "SETTLEMENT_STATE_REJECTED",
	}
	SettlementState_value = map[string]int32{
		"SETTLEMENT_STATE_UNSPECIFIED": 0,
		"SETTLEMENT_STATE_PROPOSED":    1,
		"SETTLEMENT_STATE_ACCEPTED":    2,
		"SETTLEMENT_STATE_INITIATED":   3,
		"SETTLEMENT_STATE_PREPARED":    4,
		"SETTLEMENT_STATE_EXECUTED":    5,
		"SETTLEMENT_STATE_COMPLETED":   6,
		"SETTLEMENT_STATE_WITHDRAWN":   7,
		"SETTLEMENT_STATE_FAILED":      8,
		"SETTLEMENT_STATE_REJECTED":    9,
	}
)

func (x SettlementState) Enum() *SettlementState {
	p := new(SettlementState)
	*p = x
	return p
}

func (x SettlementState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SettlementState) Descriptor() protoreflect.EnumDescriptor {
	return file_settlement_proto_enumTypes[1].Descriptor()
}

func (SettlementState) Type() protoreflect.EnumType {
	return &file_settlement_proto_enumTypes[1]
}

func (x SettlementState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SettlementState.Descriptor instead.
func (SettlementState) EnumDescriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{1}
}

type PaymentMethod int32

const (
	PaymentMethod_PAYMENT_METHOD_UNSPECIFIED PaymentMethod = 0
	PaymentMethod_PAYMENT_METHOD_ESCROW      PaymentMethod = 1
	PaymentMethod_PAYMENT_METHOD_MOCK        PaymentMethod = 2
)

// Enum value maps for PaymentMethod.
var (
	PaymentMethod_name = map[int32]string{
		0: "PAYMENT_METHOD_UNSPECIFIED",
		1: "PAYMENT_METHOD_ESCROW",
		2: "PAYMENT_METHOD_MOCK",
	}
	PaymentMethod_value = map[string]int32{
		"PAYMENT_METHOD_UNSPECIFIED": 0,
		"PAYMENT_METHOD_ESCROW":      1,
		"PAYMENT_METHOD_MOCK":        2,
	}
)

func (x PaymentMethod) Enum() *PaymentMethod {
	p := new(PaymentMethod)
	*p = x
	return p
}

func (x PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_settlement_proto_enumTypes[2].Descriptor()
}

func (PaymentMethod) Type() protoreflect.EnumType {
	return &file_settlement_proto_enumTypes[2]
}

func (x PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethod.Descriptor instead.
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{2}
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ChainId  uint64   `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Address  *Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Decimals uint32   `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Asset) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Asset) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Asset) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

type Liability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset  *Asset `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Liability) Reset() {
	*x = Liability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Liability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Liability) ProtoMessage() {}

func (x *Liability) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Liability.ProtoReflect.Descriptor instead.
func (*Liability) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{1}
}

func (x *Liability) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *Liability) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type SettlementLedger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatorEntries []*Liability `protobuf:"bytes,1,rep,name=initiator_entries,json=initiatorEntries,proto3" json:"initiator_entries,omitempty"`
	ResponderEntries []*Liability `protobuf:"bytes,2,rep,name=responder_entries,json=responderEntries,proto3" json:"responder_entries,omitempty"`
	NextMargin       *MarginCall  `protobuf:"bytes,3,opt,name=next_margin,json=nextMargin,proto3" json:"next_margin,omitempty"`
}

func (x *SettlementLedger) Reset() {
	*x = SettlementLedger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementLedger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementLedger) ProtoMessage() {}

func (x *SettlementLedger) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementLedger.ProtoReflect.Descriptor instead.
func (*SettlementLedger) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{2}
}

func (x *SettlementLedger) GetInitiatorEntries() []*Liability {
	if x != nil {
		return x.InitiatorEntries
	}
	return nil
}

func (x *SettlementLedger) GetResponderEntries() []*Liability {
	if x != nil {
		return x.ResponderEntries
	}
	return nil
}

func (x *SettlementLedger) GetNextMargin() *MarginCall {
	if x != nil {
		return x.NextMargin
	}
	return nil
}

type Settlement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid           string            `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Type          SettlementType    `protobuf:"varint,2,opt,name=type,proto3,enum=settlement.SettlementType" json:"type,omitempty"`
	State         SettlementState   `protobuf:"varint,3,opt,name=state,proto3,enum=settlement.SettlementState" json:"state,omitempty"`
	Ledger        *SettlementLedger `protobuf:"bytes,4,opt,name=ledger,proto3" json:"ledger,omitempty"`
	PsmTurnNum    uint64            `protobuf:"varint,5,opt,name=psm_turn_num,json=psmTurnNum,proto3" json:"psm_turn_num,omitempty"`
	PaymentMethod PaymentMethod     `protobuf:"varint,6,opt,name=payment_method,json=paymentMethod,proto3,enum=settlement.PaymentMethod" json:"payment_method,omitempty"`
	Markets       []string          `protobuf:"bytes,7,rep,name=markets,proto3" json:"markets,omitempty"`
	ChainId       uint64            `protobuf:"varint,8,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *Settlement) Reset() {
	*x = Settlement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settlement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settlement) ProtoMessage() {}

func (x *Settlement) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settlement.ProtoReflect.Descriptor instead.
func (*Settlement) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{3}
}

func (x *Settlement) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Settlement) GetType() SettlementType {
	if x != nil {
		return x.Type
	}
	return SettlementType_SETTLEMENT_TYPE_UNSPECIFIED
}

func (x *Settlement) GetState() SettlementState {
	if x != nil {
		return x.State
	}
	return SettlementState_SETTLEMENT_STATE_UNSPECIFIED
}

func (x *Settlement) GetLedger() *SettlementLedger {
	if x != nil {
		return x.Ledger
	}
	return nil
}

func (x *Settlement) GetPsmTurnNum() uint64 {
	if x != nil {
		return x.PsmTurnNum
	}
	return 0
}

func (x *Settlement) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_PAYMENT_METHOD_UNSPECIFIED
}

func (x *Settlement) GetMarkets() []string {
	if x != nil {
		return x.Markets
	}
	return nil
}

func (x *Settlement) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

type PrepareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settlement *Settlement `protobuf:"bytes,2,opt,name=settlement,proto3" json:"settlement,omitempty"`
}

func (x *PrepareRequest) Reset() {
	*x = PrepareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareRequest) ProtoMessage() {}

func (x *PrepareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareRequest.ProtoReflect.Descriptor instead.
func (*PrepareRequest) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{4}
}

func (x *PrepareRequest) GetSettlement() *Settlement {
	if x != nil {
		return x.Settlement
	}
	return nil
}

type PrepareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State   SettlementState `protobuf:"varint,1,opt,name=state,proto3,enum=settlement.SettlementState" json:"state,omitempty"`
	Markets []string        `protobuf:"bytes,2,rep,name=markets,proto3" json:"markets,omitempty"`
}

func (x *PrepareResponse) Reset() {
	*x = PrepareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareResponse) ProtoMessage() {}

func (x *PrepareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareResponse.ProtoReflect.Descriptor instead.
func (*PrepareResponse) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{5}
}

func (x *PrepareResponse) GetState() SettlementState {
	if x != nil {
		return x.State
	}
	return SettlementState_SETTLEMENT_STATE_UNSPECIFIED
}

func (x *PrepareResponse) GetMarkets() []string {
	if x != nil {
		return x.Markets
	}
	return nil
}

type SettlementStateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid     string          `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	ToState SettlementState `protobuf:"varint,2,opt,name=to_state,json=toState,proto3,enum=settlement.SettlementState" json:"to_state,omitempty"`
}

func (x *SettlementStateUpdate) Reset() {
	*x = SettlementStateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementStateUpdate) ProtoMessage() {}

func (x *SettlementStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementStateUpdate.ProtoReflect.Descriptor instead.
func (*SettlementStateUpdate) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{6}
}

func (x *SettlementStateUpdate) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *SettlementStateUpdate) GetToState() SettlementState {
	if x != nil {
		return x.ToState
	}
	return SettlementState_SETTLEMENT_STATE_UNSPECIFIED
}

type StateConfirmation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State SettlementState `protobuf:"varint,1,opt,name=state,proto3,enum=settlement.SettlementState" json:"state,omitempty"`
}

func (x *StateConfirmation) Reset() {
	*x = StateConfirmation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateConfirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateConfirmation) ProtoMessage() {}

func (x *StateConfirmation) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateConfirmation.ProtoReflect.Descriptor instead.
func (*StateConfirmation) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{7}
}

func (x *StateConfirmation) GetState() SettlementState {
	if x != nil {
		return x.State
	}
	return SettlementState_SETTLEMENT_STATE_UNSPECIFIED
}

type FinalizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *FinalizeRequest) Reset() {
	*x = FinalizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeRequest) ProtoMessage() {}

func (x *FinalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeRequest.ProtoReflect.Descriptor instead.
func (*FinalizeRequest) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{8}
}

func (x *FinalizeRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type FinalizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State SettlementState `protobuf:"varint,1,opt,name=state,proto3,enum=settlement.SettlementState" json:"state,omitempty"`
}

func (x *FinalizeResponse) Reset() {
	*x = FinalizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settlement_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeResponse) ProtoMessage() {}

func (x *FinalizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_settlement_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeResponse.ProtoReflect.Descriptor instead.
func (*FinalizeResponse) Descriptor() ([]byte, []int) {
	return file_settlement_proto_rawDescGZIP(), []int{9}
}

func (x *FinalizeResponse) GetState() SettlementState {
	if x != nil {
		return x.State
	}
	return SettlementState_SETTLEMENT_STATE_UNSPECIFIED
}

var File_settlement_proto protoreflect.FileDescriptor

var file_settlement_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0a,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x4c, 0x0a, 0x09, 0x4c, 0x69, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x11, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x10, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x42, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x22, 0xd0, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0c, 0x70, 0x73, 0x6d, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x73, 0x6d, 0x54, 0x75, 0x72, 0x6e, 0x4e,
	0x75, 0x6d, 0x12, 0x40, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x0e, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x22, 0x61, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x36,
	0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x74,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x23,
	0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2a, 0x6b, 0x0a, 0x0e, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b,
	0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a,
	0x19, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x46, 0x4f, 0x52, 0x43, 0x45, 0x10, 0x02, 0x2a, 0xcb, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x53,
	0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a,
	0x19, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x53,
	0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45,
	0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45,
	0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x45, 0x54,
	0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x45, 0x54,
	0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x4e, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x54,
	0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43,
	0x54, 0x45, 0x44, 0x10, 0x09, 0x2a, 0x63, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x45, 0x53, 0x43, 0x52, 0x4f, 0x57, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54,
	0x48, 0x4f, 0x44, 0x5f, 0x4d, 0x4f, 0x43, 0x4b, 0x10, 0x02, 0x32, 0xea, 0x01, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x42, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x45, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x2e, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2d, 0x33, 0x2f, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_settlement_proto_rawDescOnce sync.Once
	file_settlement_proto_rawDescData = file_settlement_proto_rawDesc
)

func file_settlement_proto_rawDescGZIP() []byte {
	file_settlement_proto_rawDescOnce.Do(func() {
		file_settlement_proto_rawDescData = protoimpl.X.CompressGZIP(file_settlement_proto_rawDescData)
	})
	return file_settlement_proto_rawDescData
}

var file_settlement_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_settlement_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_settlement_proto_goTypes = []interface{}{
	(SettlementType)(0),           // 0: settlement.SettlementType
	(SettlementState)(0),          // 1: settlement.SettlementState
	(PaymentMethod)(0),            // 2: settlement.PaymentMethod
	(*Asset)(nil),                 // 3: settlement.Asset
	(*Liability)(nil),             // 4: settlement.Liability
	(*SettlementLedger)(nil),      // 5: settlement.SettlementLedger
	(*Settlement)(nil),            // 6: settlement.Settlement
	(*PrepareRequest)(nil),        // 7: settlement.PrepareRequest
	(*PrepareResponse)(nil),       // 8: settlement.PrepareResponse
	(*SettlementStateUpdate)(nil), // 9: settlement.SettlementStateUpdate
	(*StateConfirmation)(nil),     // 10: settlement.StateConfirmation
	(*FinalizeRequest)(nil),       // 11: settlement.FinalizeRequest
	(*FinalizeResponse)(nil),      // 12: settlement.FinalizeResponse
	(*Address)(nil),               // 13: core.Address
	(*MarginCall)(nil),            // 14: core.MarginCall
}
var file_settlement_proto_depIdxs = []int32{
	13, // 0: settlement.Asset.address:type_name -> core.Address
	3,  // 1: settlement.Liability.asset:type_name -> settlement.Asset
	4,  // 2: settlement.SettlementLedger.initiator_entries:type_name -> settlement.Liability
	4,  // 3: settlement.SettlementLedger.responder_entries:type_name -> settlement.Liability
	14, // 4: settlement.SettlementLedger.next_margin:type_name -> core.MarginCall
	0,  // 5: settlement.Settlement.type:type_name -> settlement.SettlementType
	1,  // 6: settlement.Settlement.state:type_name -> settlement.SettlementState
	5,  // 7: settlement.Settlement.ledger:type_name -> settlement.SettlementLedger
	2,  // 8: settlement.Settlement.payment_method:type_name -> settlement.PaymentMethod
	6,  // 9: settlement.PrepareRequest.settlement:type_name -> settlement.Settlement
	1,  // 10: settlement.PrepareResponse.state:type_name -> settlement.SettlementState
	1,  // 11: settlement.SettlementStateUpdate.to_state:type_name -> settlement.SettlementState
	1,  // 12: settlement.StateConfirmation.state:type_name -> settlement.SettlementState
	1,  // 13: settlement.FinalizeResponse.state:type_name -> settlement.SettlementState
	7,  // 14: settlement.SettlementService.Prepare:input_type -> settlement.PrepareRequest
	9,  // 15: settlement.SettlementService.Update:input_type -> settlement.SettlementStateUpdate
	11, // 16: settlement.SettlementService.Finalize:input_type -> settlement.FinalizeRequest
	8,  // 17: settlement.SettlementService.Prepare:output_type -> settlement.PrepareResponse
	10, // 18: settlement.SettlementService.Update:output_type -> settlement.StateConfirmation
	12, // 19: settlement.SettlementService.Finalize:output_type -> settlement.FinalizeResponse
	17, // [17:20] is the sub-list for method output_type
	14, // [14:17] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_settlement_proto_init() }
func file_settlement_proto_init() {
	if File_settlement_proto != nil {
		return
	}
	file_core_proto_init()
	file_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_settlement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settlement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Liability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settlement_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementLedger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settlement_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settlement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settlement_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settlement_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settlement_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementStateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settlement_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateConfirmation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settlement_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settlement_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_settlement_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_settlement_proto_goTypes,
		DependencyIndexes: file_settlement_proto_depIdxs,
		EnumInfos:         file_settlement_proto_enumTypes,
		MessageInfos:      file_settlement_proto_msgTypes,
	}.Build()
	File_settlement_proto = out.File
	file_settlement_proto_rawDesc = nil
	file_settlement_proto_goTypes = nil
	file_settlement_proto_depIdxs = nil
}
